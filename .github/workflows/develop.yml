name: Deploy_Refresher_To_Development_On_Push

on:
  push:
    paths-ignore: # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - '**/README.md'
      - '.github/workflows/main.yml'
    branches:
      - develop

env:
  STAGE: dev-aci-iati
  NAME: refresher
  TAG: ${{ github.sha }}
  RESOURCE_GROUP: rg-refresher-dev
  AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
  AZURE_STORAGE_CONTAINER_SOURCE: ${{ secrets.AZURE_STORAGE_CONTAINER_SOURCE }}
  FILE_VALIDATION_URL: ${{ secrets.FILE_VALIDATION_URL }}
  FILE_VALIDATION_KEY_NAME: ${{ secrets.DEV_FILE_VALIDATION_KEY_NAME }}
  FILE_VALIDATION_KEY_VALUE: ${{ secrets.DEV_FILE_VALIDATION_KEY_VALUE }}
  SCHEMA_VALIDATION_URL: ${{ secrets.DEV_SCHEMA_VALIDATION_URL }}
  SCHEMA_VALIDATION_KEY_NAME: ${{ secrets.DEV_SCHEMA_VALIDATION_KEY_NAME }}
  SCHEMA_VALIDATION_KEY_VALUE: ${{ secrets.DEV_SCHEMA_VALIDATION_KEY_VALUE }}
  FLATTENER_API_URL: ${{ secrets.DEV_FLATTENER_API_URL }}
  FLATTENER_KEY_NAME: ${{ secrets.DEV_FLATTENER_KEY_NAME }}
  FLATTENER_KEY_VALUE: ${{ secrets.DEV_FLATTENER_API_KEY }}
  SOLR_API_URL: ${{ secrets.DEV_SOLR_API_URL }}
  SOLR_USER: ${{ secrets.DEV_SOLR_USER }}
  SOLR_PASSWORD: ${{ secrets.DEV_SOLR_PASSWORD }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PORT: ${{ secrets.DB_PORT }}
  LOG_WORKSPACE_ID: ${{ secrets.DEV_LOG_WORKSPACE_ID }}
  LOG_WORKSPACE_KEY: ${{ secrets.DEV_LOG_WORKSPACE_KEY }}
  ACTIVITIES_LAKE_CONTAINER_NAME: ${{ secrets.DEV_ACTIVITIES_LAKE_CONTAINER_NAME }}
  SOLR_500_SLEEP: ${{ secrets.DEV_SOLR_500_SLEEP }}
  COMMSHUB_URL: ${{ secrets.DEV_COMMSHUB_URL }}
  COMMSHUB_KEY: $${{ secrets.DEV_COMMSHUB_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v2
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}
      - name: "Login to Docker Hub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: "Login to Azure Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: "Build and push image"
        run: |
          docker build . -f refresh-dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-refresh:$TAG
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-refresh:$TAG
          docker build . -f validate-dockerfile  -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-validate:$TAG
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-validate:$TAG
          docker build . -f validate-activity-level-dockerfile  -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-validate-activity-level:$TAG
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-validate-activity-level:$TAG
          docker build . -f flatten-dockerfile  -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-flatten:$TAG
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-flatten:$TAG
          docker build . -f solrize-dockerfile  -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-solrize:$TAG
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-solrize:$TAG
          docker build . -f lakify-dockerfile  -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-lakify:$TAG
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/$STAGE-$NAME-lakify:$TAG
      - name: "Deploy Refresh to Azure Container Instances"
        uses: "azure/CLI@1.0.4"
        with:
            azcliversion: 2.30.0
            inlineScript: |
              az container create \
              --resource-group "${{ env.RESOURCE_GROUP }}" \
              --image "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.STAGE}}-${{env.NAME}}-refresh:${{ env.TAG }}" \
              --registry-login-server "${{ secrets.REGISTRY_LOGIN_SERVER }}" \
              --registry-username "${{ secrets.REGISTRY_USERNAME }}" \
              --registry-password "${{ secrets.REGISTRY_PASSWORD }}" \
              --name "${{ env.STAGE }}-${{ env.NAME }}-refresh" \
              --location "uksouth" \
              --restart-policy "Always" \
              --ip-address "Private" \
              --vnet "dev-iati-refresher" \
              --subnet "default" \
              --memory "4" \
              --cpu "1" \
              --os-type "Linux" \
              --log-analytics-workspace "${{ env.LOG_WORKSPACE_ID }}" \
              --log-analytics-workspace-key "${{ env.LOG_WORKSPACE_KEY }}" \
              --secure-environment-variables \
                AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" \
                AZURE_STORAGE_CONTAINER_SOURCE="${{ env.AZURE_STORAGE_CONTAINER_SOURCE }}" \
                DB_HOST="${{ env.DB_HOST }}" \
                DB_PORT="${{ env.DB_PORT }}" \
                DB_USER="${{ env.DB_USER }}" \
                DB_PASS="${{ env.DB_PASS }}" \
                DB_NAME="${{ env.DB_NAME }}" \
                SOLR_API_URL="${{ env.SOLR_API_URL }}" \
                SOLR_USER="${{ env.SOLR_USER }}" \
                SOLR_PASSWORD="${{ env.SOLR_PASSWORD }}" \
                ACTIVITIES_LAKE_CONTAINER_NAME="${{ env.ACTIVITIES_LAKE_CONTAINER_NAME }}" \
                COMMSHUB_URL="${{ env.COMMSHUB_URL }}" \
                COMMSHUB_KEY="${{ env.COMMSHUB_KEY }}"
                
      - name: "Deploy Validate to Azure Container Instances"
        uses: "azure/CLI@1.0.4"
        with:
            azcliversion: 2.30.0
            inlineScript: |
              az container create \
              --resource-group "${{ env.RESOURCE_GROUP }}" \
              --image "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.STAGE}}-${{env.NAME}}-validate:${{ env.TAG }}" \
              --registry-login-server "${{ secrets.REGISTRY_LOGIN_SERVER }}" \
              --registry-username "${{ secrets.REGISTRY_USERNAME }}" \
              --registry-password "${{ secrets.REGISTRY_PASSWORD }}" \
              --name "${{ env.STAGE }}-${{ env.NAME }}-validate" \
              --location "uksouth" \
              --restart-policy "Always" \
              --ip-address "Private" \
              --vnet "dev-iati-refresher" \
              --subnet "default" \
              --memory "2" \
              --cpu "1" \
              --os-type "Linux" \
              --log-analytics-workspace "${{ env.LOG_WORKSPACE_ID }}" \
              --log-analytics-workspace-key "${{ env.LOG_WORKSPACE_KEY }}" \
              --secure-environment-variables \
                AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" \
                AZURE_STORAGE_CONTAINER_SOURCE="${{ env.AZURE_STORAGE_CONTAINER_SOURCE }}" \
                VALIDATOR_API_URL="${{ env.FILE_VALIDATION_URL }}" \
                SCHEMA_VALIDATION_API_URL="${{ env.SCHEMA_VALIDATION_URL }}" \
                VALIDATOR_API_KEY_NAME="${{ env.FILE_VALIDATION_KEY_NAME }}" \
                VALIDATOR_API_KEY_VALUE="${{ env.FILE_VALIDATION_KEY_VALUE }}" \
                VALIDATOR_PARALLEL="${{ env.VALIDATOR_PARALLEL }}" \
                DB_HOST="${{ env.DB_HOST }}" \
                DB_PORT="${{ env.DB_PORT }}" \
                DB_USER="${{ env.DB_USER }}" \
                DB_PASS="${{ env.DB_PASS }}" \
                DB_NAME="${{ env.DB_NAME }}" \
                SOLR_API_URL="${{ env.SOLR_API_URL }}" \
                SOLR_USER="${{ env.SOLR_USER }}" \
                SOLR_PASSWORD="${{ env.SOLR_PASSWORD }}" \
                COMMSHUB_URL="${{ env.COMMSHUB_URL }}" \
                COMMSHUB_KEY="${{ env.COMMSHUB_KEY }}"

      - name: "Deploy Validate Activity Level to Azure Container Instances"
        uses: "azure/CLI@1.0.4"
        with:
            azcliversion: 2.30.0
            inlineScript: |
              az container create \
              --resource-group "${{ env.RESOURCE_GROUP }}" \
              --image "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.STAGE}}-${{env.NAME}}-validate-activity-level:${{ env.TAG }}" \
              --registry-login-server "${{ secrets.REGISTRY_LOGIN_SERVER }}" \
              --registry-username "${{ secrets.REGISTRY_USERNAME }}" \
              --registry-password "${{ secrets.REGISTRY_PASSWORD }}" \
              --name "${{ env.STAGE }}-${{ env.NAME }}-validate-activity-level" \
              --location "uksouth" \
              --restart-policy "Always" \
              --ip-address "Private" \
              --vnet "dev-iati-refresher" \
              --subnet "default" \
              --memory "4" \
              --cpu "1" \
              --os-type "Linux" \
              --log-analytics-workspace "${{ env.LOG_WORKSPACE_ID }}" \
              --log-analytics-workspace-key "${{ env.LOG_WORKSPACE_KEY }}" \
              --secure-environment-variables \
                AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" \
                AZURE_STORAGE_CONTAINER_SOURCE="${{ env.AZURE_STORAGE_CONTAINER_SOURCE }}" \
                VALIDATOR_API_URL="${{ env.ACTIVITY_VALIDATION_URL }}" \
                SCHEMA_VALIDATION_API_URL="${{ env.SCHEMA_VALIDATION_URL }}" \
                VALIDATOR_API_KEY_NAME="${{ env.FILE_VALIDATION_KEY_NAME }}" \
                VALIDATOR_API_KEY_VALUE="${{ env.FILE_VALIDATION_KEY_VALUE }}" \
                SCHEMA_VALIDATION_KEY_NAME="${{ env.SCHEMA_VALIDATION_KEY_NAME }}" \
                SCHEMA_VALIDATION_KEY_VALUE="${{ env.SCHEMA_VALIDATION_KEY_VALUE }}" \
                VALIDATOR_PARALLEL="${{ env.VALIDATOR_PARALLEL }}" \
                DB_HOST="${{ env.DB_HOST }}" \
                DB_PORT="${{ env.DB_PORT }}" \
                DB_USER="${{ env.DB_USER }}" \
                DB_PASS="${{ env.DB_PASS }}" \
                DB_NAME="${{ env.DB_NAME }}" \
                SOLR_API_URL="${{ env.SOLR_API_URL }}" \
                SOLR_USER="${{ env.SOLR_USER }}" \
                SOLR_PASSWORD="${{ env.SOLR_PASSWORD }}" \
                COMMSHUB_URL="${{ env.COMMSHUB_URL }}" \
                COMMSHUB_KEY="${{ env.COMMSHUB_KEY }}"
     
      - name: "Deploy Flatten to Azure Container Instances"
        uses: "azure/CLI@1.0.4"
        with:
            azcliversion: 2.30.0
            inlineScript: |
              az container create \
              --resource-group "${{ env.RESOURCE_GROUP }}" \
              --image "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.STAGE}}-${{env.NAME}}-flatten:${{ env.TAG }}" \
              --registry-login-server "${{ secrets.REGISTRY_LOGIN_SERVER }}" \
              --registry-username "${{ secrets.REGISTRY_USERNAME }}" \
              --registry-password "${{ secrets.REGISTRY_PASSWORD }}" \
              --name "${{ env.STAGE }}-${{ env.NAME }}-flatten" \
              --location "uksouth" \
              --restart-policy "Always" \
              --ip-address "Private" \
              --vnet "dev-iati-refresher" \
              --subnet "default" \
              --memory "2" \
              --cpu "1" \
              --os-type "Linux" \
              --log-analytics-workspace "${{ env.LOG_WORKSPACE_ID }}" \
              --log-analytics-workspace-key "${{ env.LOG_WORKSPACE_KEY }}" \
              --secure-environment-variables \
                AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" \
                AZURE_STORAGE_CONTAINER_SOURCE="${{ env.AZURE_STORAGE_CONTAINER_SOURCE }}" \
                FLATTENER_API_URL="${{ env.FLATTENER_API_URL }}" \
                FLATTENER_KEY_NAME="${{ env.FLATTENER_KEY_NAME }}" \
                FLATTENER_KEY_VALUE="${{ env.FLATTENER_KEY_VALUE }}" \
                DB_HOST="${{ env.DB_HOST }}" \
                DB_PORT="${{ env.DB_PORT }}" \
                DB_USER="${{ env.DB_USER }}" \
                DB_PASS="${{ env.DB_PASS }}" \
                DB_NAME="${{ env.DB_NAME }}" \
                SOLR_API_URL="${{ env.SOLR_API_URL }}" \
                SOLR_USER="${{ env.SOLR_USER }}" \
                SOLR_PASSWORD="${{ env.SOLR_PASSWORD }}" \
                COMMSHUB_URL="${{ env.COMMSHUB_URL }}" \
                COMMSHUB_KEY="${{ env.COMMSHUB_KEY }}"
                
      - name: "Deploy Solrize to Azure Container Instances"
        uses: "azure/CLI@1.0.4"
        with:
            azcliversion: 2.30.0
            inlineScript: |
              az container create \
              --resource-group "${{ env.RESOURCE_GROUP }}" \
              --image "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.STAGE}}-${{env.NAME}}-solrize:${{ env.TAG }}" \
              --registry-login-server "${{ secrets.REGISTRY_LOGIN_SERVER }}" \
              --registry-username "${{ secrets.REGISTRY_USERNAME }}" \
              --registry-password "${{ secrets.REGISTRY_PASSWORD }}" \
              --name "${{ env.STAGE }}-${{ env.NAME }}-solrize" \
              --location "uksouth" \
              --restart-policy "Always" \
              --ip-address "Private" \
              --vnet "dev-iati-refresher" \
              --subnet "default" \
              --memory "4" \
              --cpu "1" \
              --os-type "Linux" \
              --log-analytics-workspace "${{ env.LOG_WORKSPACE_ID }}" \
              --log-analytics-workspace-key "${{ env.LOG_WORKSPACE_KEY }}" \
              --secure-environment-variables \
                AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" \
                AZURE_STORAGE_CONTAINER_SOURCE="${{ env.AZURE_STORAGE_CONTAINER_SOURCE }}" \
                SOLR_API_URL="${{ env.SOLR_API_URL }}" \
                SOLR_USER="${{ env.SOLR_USER }}" \
                SOLR_PASSWORD="${{ env.SOLR_PASSWORD }}" \
                ACTIVITIES_LAKE_CONTAINER_NAME="${{ env.ACTIVITIES_LAKE_CONTAINER_NAME }}" \
                DB_HOST="${{ env.DB_HOST }}" \
                DB_PORT="${{ env.DB_PORT }}" \
                DB_USER="${{ env.DB_USER }}" \
                DB_PASS="${{ env.DB_PASS }}" \
                DB_NAME="${{ env.DB_NAME }}" \
                SOLR_500_SLEEP="${{ env.SOLR_500_SLEEP }}" \
                COMMSHUB_URL="${{ env.COMMSHUB_URL }}" \
                COMMSHUB_KEY="${{ env.COMMSHUB_KEY }}"

      - name: "Deploy Lakify to Azure Container Instances"
        uses: "azure/CLI@1.0.4"
        with:
            azcliversion: 2.30.0
            inlineScript: |
              az container create \
              --resource-group "${{ env.RESOURCE_GROUP }}" \
              --image "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.STAGE}}-${{env.NAME}}-lakify:${{ env.TAG }}" \
              --registry-login-server "${{ secrets.REGISTRY_LOGIN_SERVER }}" \
              --registry-username "${{ secrets.REGISTRY_USERNAME }}" \
              --registry-password "${{ secrets.REGISTRY_PASSWORD }}" \
              --name "${{ env.STAGE }}-${{ env.NAME }}-lakify" \
              --location "uksouth" \
              --restart-policy "Always" \
              --ip-address "Private" \
              --vnet "dev-iati-refresher" \
              --subnet "default" \
              --memory "2" \
              --cpu "1" \
              --os-type "Linux" \
              --log-analytics-workspace "${{ env.LOG_WORKSPACE_ID }}" \
              --log-analytics-workspace-key "${{ env.LOG_WORKSPACE_KEY }}" \
              --secure-environment-variables \
                AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" \
                AZURE_STORAGE_CONTAINER_SOURCE="${{ env.AZURE_STORAGE_CONTAINER_SOURCE }}" \
                ACTIVITIES_LAKE_CONTAINER_NAME="${{ env.ACTIVITIES_LAKE_CONTAINER_NAME }}" \
                SOLR_API_URL="${{ env.SOLR_API_URL }}" \
                DB_HOST="${{ env.DB_HOST }}" \
                DB_PORT="${{ env.DB_PORT }}" \
                DB_USER="${{ env.DB_USER }}" \
                DB_PASS="${{ env.DB_PASS }}" \
                DB_NAME="${{ env.DB_NAME }}" \
                COMMSHUB_URL="${{ env.COMMSHUB_URL }}" \
                COMMSHUB_KEY="${{ env.COMMSHUB_KEY }}"
              